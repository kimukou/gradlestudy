apply plugin: 'android'
apply plugin: 'project-report'

task wrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-4'
}

buildscript {
    repositories {
        mavenRepo(urls: 'http://jvoegele.com/maven2/')
    }
    dependencies {
        classpath 'com.jvoegele.gradle.plugins:android-plugin:1.0.0'
        //classpath 'com.jvoegele.gradle.plugins:android-plugin:0.9.7'
    }
}

repositories {
    //flatDir(dirs: file("$projectDir/libs"))
    mavenCentral()
    mavenRepo urls: 'http://twitter4j.org/maven2'
}


dependencies {
    //compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.7.10'
    compile group:'org.twitter4j', name:'twitter4j-core', version:'[2.2,)'
    //compile group:'org.twitter4j', name:'twitter4j-core', version:'2.1.8-SNAPSHOT'
    //runtime group:'org.twitter4j', name:'twitter4j-core', version:'2.1.8-SNAPSHOT'
}


// version of a project is set up.
version = "x.y.z"

//Source position 
def jdkVersion = 1.5
def enc = 'UTF-8'
sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion
[compileJava, compileTestJava].each{ it.options.encoding = enc }
/*
[compileJava, compileGroovy, compileTestJava, compileTestGroovy].each{ it.options.encoding = enc }
[compileGroovy, compileTestGroovy].each{ it.groovyOptions.encoding = enc }
*/

sourceSets.main.java.srcDirs += ['src']

ant.echo sourceSets.main.java.srcDirs
/*
task hoge{
    def ANDROID_HOME=System.getenv()['ANDROID_HOME']
    ant.echo  "ANDROID_HOME=$ANDROID_HOME"
    //ant.exec(executable: "$ANDROID_HOME/tools/emulator", dir: ANDROID_HOME, output: "$rootDir/svnlist.log" , spawn:'true') {
    ant.exec(executable: "emulator", dir: ".", output: "svnlist.log" , spawn:'true') {
        arg(line: "-avd myAVD")
    }
}
*/


// Signature setup 
androidPackage {
    //keyStore = System.getProperty('user.home')+"/.android/debug.keystore"
    keyStore = "${projectDir}/debug.keystore"
    keyAlias = 'androiddebugkey'
    // If the password is not set up, it can ask for an input by a command prompt.
    keyStorePassword = "android"
    keyAliasPassword = "android"
}

// using the property of a project to filtering (solution of a property) of a resource
processResources {
    expand (project.properties)
}


jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

// Debug build setup 
task configureDebug << {
    jar.classifier = "debug"
}

// Release build setup 
task configureRelease << {
    proguard.enabled = true
}

androidEmulatorStart {
    avdName = "myAVD"
}
