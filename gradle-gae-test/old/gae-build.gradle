apply plugin: 'gae'
apply plugin: 'idea'
apply plugin: 'eclipse'


//see https://github.com/bmuschko/gradle-gae-plugin

/*
buildscript {
    repositories {
        flatDir(dirs: file("${APPENGINE_SDK_DIR}/lib"))
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = "GitHub"
            addArtifactPattern 'http://cloud.github.com/downloads/bmuschko/gradle-gae-plugin/[module]-[revision].[ext]'
        }
        mavenCentral()
    }

    dependencies {
        //classpath 'com.google.appengine:appengine-tools-sdk:1.5.0'
        classpath ':appengine-tools-api:'
        classpath ':gradle-gae-plugin:0.5.1'
    }
}
*/

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-gae-plugin:0.8'
    }
}

dependencies {
    gaeSdk 'com.google.appengine:appengine-java-sdk:1.7.3'
}

gae {
    httpPort = 9090
	optimizeWar = true

    appcfg {
        email = E_MAIL
        passIn = true
        //passIn = false
        //password = PASS_WD

        logs {
            severity = 1
            outputFile = new File('mylogs.txt')
        }
		app {
            id = 'gradle-gae-test'
        }
    }
	warDir = file('src/main/webapp')
    //warDir = new File("war")
	jvmFlags = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000']
}
sourceSets.main.output.classesDir = 'src/main/webapp/WEB-INF/classes'

apply plugin: 'groovy'
sourceSets {
    main {
        groovy {
            srcDirs = ["src"]
        }
    }
}
webAppDirName = new File("war")
