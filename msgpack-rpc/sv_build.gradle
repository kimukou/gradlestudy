defaultTasks 'TestServer'

task wrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-3'
}

def jdkVersion = 1.6
def enc = 'UTF-8'
sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion
/*
[compileJava, compileGroovy, compileTestJava, compileTestGroovy].each{ it.options.encoding = enc }
[compileGroovy, compileTestGroovy].each{ it.groovyOptions.encoding = enc }
*/

buildscript {
    repositories {
        mavenCentral()
       mavenRepo urls: [ "http://msgpack.org/maven2/",
                         "http://download.java.net/maven/2/",
                         "http://repository.jboss.org/maven2/",
                         "http://repository.jboss.org/nexus/content/groups/public-jboss/"]
    }
    dependencies {
/*
        classpath "org.msgpack:msgpack-rpc:0.6.1-devel",
                            "org.msgpack:msgpack:0.6.1",
                            "org.apache.mina:mina-core:2.0.1",
                            "org.jboss.xnio:xnio-api:2.0.2.GA",
                            "org.jboss.xnio:xnio-nio:2.0.2.GA",
                            "org.jboss.netty:netty:3.2.1.Final",
                            "javassist:javassist:3.12.1.GA"
                            //"junit:junit:4.8.1"
*/
        classpath("org.msgpack:msgpack-rpc:0.6.1-devel")
        //classpath("org.msgpack:msgpack:0.6.1")
        //classpath("org.jboss.netty:netty:3.2.1.Final")
    }
/*
  configurations {
    classpath.exclude module: 'msgpack-rpc'
    classpath.exclude module: 'msgpack'
  }
*/
}


//
// refarence http://redmine.msgpack.org/projects/msgpack/wiki/QuickStartJava
//
import org.msgpack.rpc.Server
import org.msgpack.rpc.loop.EventLoop
import org.msgpack.rpc.Request

class ServerApp {
/*
    String hello(String msg, int a) {
        return msg
    }
*/
        //== instead ==> 
        void hello(Request request, String msg, int a){
        if(a > 0){
            // send normal response
            request.sendResult(msg)
        }else{
            // send error
            request.sendError("a must  be a > 0")
        }
    }

}

task TestServer{
        println "TestServer start"
        EventLoop loop = EventLoop.defaultEventLoop()
        Server svr = new Server(loop)
        svr.serve(new ServerApp())
        println "TestServer 1985 listen"
        svr.listen(1985)
        loop.join()
}
