apply plugin: "groovy"

def jdkVersion = 1.6
def enc = 'UTF-8'
sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion
[compileJava, compileGroovy, compileTestJava, compileTestGroovy].each{ it.options.encoding = enc }
[compileGroovy, compileTestGroovy].each{ it.groovyOptions.encoding = enc }

task wrapper(type: Wrapper) {
  gradleVersion = '1.0-milestone-4'
}


repositories {
  flatDir name: 'localRepository', dirs: 'lib' 
  mavenCentral()
  mavenRepo urls: [ 
      "https://nexus.codehaus.org/content/repositories/snapshots",
      "https://oss.sonatype.org/content/repositories/releases"
  ]
}

configurations {
  testCompile.transitive = true
}

// The drivers we want to use
def drivers = ["htmlunit", "firefox", "chrome","ie","android"]

dependencies {
  //groovy "org.codehaus.groovy:groovy-all:1.7.10"
  groovy "org.codehaus.groovy:groovy-all:1.8.2"
  
  def gebVersion = "0.6.0"
  def seleniumVersion = "latest.release"//"2.0rc3"//"2.3.1"
  def seleniumVersionIE = "latest.release"//"2.0.0"
  def seleniumVersionAndroid = "2.6.0"
  
  // If using Spock, need to depend on geb-spock
  testCompile "org.codehaus.geb:geb-spock:$gebVersion"
  //testCompile "org.spockframework:spock-core:0.5-groovy-1.7"
  testCompile "org.spockframework:spock-core:0.5-groovy-1.8"
  
  // If using JUnit, need to depend on geb-junit (3 or 4)
  testCompile "org.codehaus.geb:geb-junit4:$gebVersion"
  testCompile "junit:junit-dep:4.8.2"

  //remote driver
  testCompile "org.seleniumhq.selenium:selenium-server:$seleniumVersion"
  
  // Drivers
  drivers.each { driver ->
    if(driver=="ie"){
      testCompile("org.seleniumhq.selenium:selenium-$driver-driver:$seleniumVersionIE")
    }
    else if(driver=="android"){
      testCompile("org.seleniumhq.selenium:selenium-$driver-driver:$seleniumVersionAndroid")
    }
    else{
      testCompile("org.seleniumhq.selenium:selenium-$driver-driver:$seleniumVersion")
    }
  }
//opera setting 
  testCompile("com.opera:operadriver:0.7.4-SNAPSHOT"){ 
    transitive = true
    exclude module:'xml-apis' 
  }
  testCompile "com.google.protobuf:protobuf-java:2.4.1"
  testCompile "commons-jxpath:commons-jxpath:1.3"
//opera setting 
}


drivers.add "opera" //opera
drivers.add "safari" //safari
drivers.each { driver ->
  task "${driver}Test"(type: Test) {

/*
    // android only java Test
    if(driver=="android"){
      doFirst{
        sourceSets.test.java.srcDir 'src/main/java'
        sourceSets.test.groovy.srcDirs=[]
      }
    }
    else{
      doFirst{
        sourceSets.test.java.srcDirs=[]
        sourceSets.test.groovy.srcDir 'src/main/groovy'
      }
    }
*/

    testReportDir = file("$reportsDir/$name/tests")
    testResultsDir = file("$buildDir/test-results/$name")
    
    systemProperty "geb.build.reportsDir", "$reportsDir/$name/geb"
    systemProperty "geb.env", driver
    
    // If you wanted to set the baseUrl in your buildâ€¦
    // systemProperty "geb.build.baseUrl", "http://myapp.com"
    systemProperty "capture.env", "false"

    systemProperties "geb.build.baseUrl": "http://www.google.co.jp/"
    systemProperties "groovy.source.encoding":enc
    systemProperties "file.encoding":enc

    //need firefox ?
    // ref https://github.com/literalice/sample-geb-spock/blob/master/build.gradle
    if (rootProject.hasProperty("browser.bin")) {
        systemProperties "webdriver.firefox.bin":rootProject["browser.bin"]
    }
    if (rootProject.hasProperty("env")) {
        systemProperties "geb.env":rootProject["env"]
    }
  }
}

task test(overwrite: true, dependsOn: drivers.collect { tasks["${it}Test"] })

